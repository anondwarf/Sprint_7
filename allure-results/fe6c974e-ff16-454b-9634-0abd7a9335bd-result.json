{"name": "Проверка авторизации курьера", "status": "failed", "statusDetails": {"message": "AssertionError: assert 504 == 400\n +  where 504 = <Response [504]>.status_code", "trace": "self = <test_login_courier.TestLoginCourier object at 0x000001CF9F8AB6F0>, registered_courier = {'login': 'lWLJbb'}, status_code = 400, response_text = {'code': 400, 'message': 'Недостаточно данных для входа'}\n\n    @allure.title(test_title=\"Проверка авторизации курьера\")\n    @pytest.mark.parametrize(\n        \"registered_courier, status_code, response_text\",\n        [\n            (\"ok\", ResponseCode.OK.value, RegExp.NUMBER.value),\n            (\n                \"login\",\n                ResponseCode.BAD_REQUEST.value,\n                ResponseText.LOGIN_BAD_REQUEST.value,\n            ),\n            (\n                \"password\",\n                ResponseCode.BAD_REQUEST.value,\n                ResponseText.LOGIN_BAD_REQUEST.value,\n            ),\n        ],\n        indirect=[\"registered_courier\"],\n        ids=[\"ok\", \"Absence login\", \"Absence password\"],\n    )\n    def test_login_courier(\n        self,\n        registered_courier: dict[str, str],\n        status_code: int,\n        response_text: str,\n    ) -> None:\n        print(registered_courier)\n        response = requests.post(\n            url=f\"{os.getenv('BASE_URL')}{ApiEndPoints.LOGIN_COURIER.value}\",\n            data=registered_courier,\n        )\n    \n>       assert response.status_code == status_code\nE       assert 504 == 400\nE        +  where 504 = <Response [504]>.status_code\n\ntests\\test_login_courier.py:45: AssertionError"}, "attachments": [{"name": "stdout", "source": "20d5bb03-3f43-4179-b01b-2cc3ba34b9e1-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "registered_courier", "value": "'password'"}, {"name": "status_code", "value": "400"}, {"name": "response_text", "value": "{'code': 400, 'message': 'Недостаточно данных для входа'}"}], "start": 1736673733585, "stop": 1736673793790, "uuid": "95a2c98a-9d30-450c-afba-fc31a37a3617", "historyId": "466466cfd2abe56e7407dba8b8746bb0", "testCaseId": "43379f67c127106016bab83f2e020344", "fullName": "tests.test_login_courier.TestLoginCourier#test_login_courier", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login_courier"}, {"name": "subSuite", "value": "TestLoginCourier"}, {"name": "host", "value": "home"}, {"name": "thread", "value": "42088-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login_courier"}]}